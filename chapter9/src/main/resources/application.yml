server:
  port: 8080

spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    # 基本属性 	allowMultiQueries：设置为true后，数据库那边才允许你批量更新。编码属性设置了存储数据到数据库才不会是乱码
    url: jdbc:mysql://localhost:3306/chapter9?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC&useSSL=false
    username: root
    password: 123456
    # 下面为连接池的补充设置，应用到上面所有数据源中
    hikari:
      # 表示连接池的用户定义名称，主要显示在日志记录和JMX管理控制台中，以标识池和池配置。
      pool-name: HikariPool
      # 控制客户端（即您）等待池中连接的最大毫秒数。如果在没有连接可用的情况下超过此时间，则将抛出SQLException。最低可接受的连接超时为250毫秒。 默认值：30000（30秒）
      connection-timeout: 3000
      # 控制允许连接在池中空闲的最长时间。默认值：600000（10分钟）
      idle-timeout: 600000
      # 控制池中连接的最长生命周期。默认值：1800000（30分钟）
      max-lifetime: 1800000

mybatis:
  mapper-locations: classpath:mapper/*.xml  # 注意：一定要对应 mapper 映射xml文件的所在路径
  type-aliases-package: com.fatal.entity  # 注意：对应实体类的路径
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl  # 可以自控制台上输出 sql 语句

# pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# 通用Mapper
mapper:
  # 主键自增回写方法,默认值MYSQL,详细说明请看文档
  identity: MYSQL
  mappers: tk.mybatis.mapper.common.BaseMapper
  # 设置 insert 和 update 中，是否判断字符串类型!=''
  not-empty: true
  # 枚举按简单类型处理
  enum-as-simple-type: true
